name: Node.js App Deploy to EKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is the latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create ECR Repository
      run: aws ecr create-repository --repository-name node-app || true

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: node-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Check if EKS Cluster Exists
      id: eks-check
      run: |
        eks_cluster_name="primuslearning-migration"
        aws eks describe-cluster --name $eks_cluster_name --query 'cluster.status' --output text || echo "Cluster does not exist"
      continue-on-error: true

    - name: Create EKS Cluster (if it does not exist)
      run: |
        eks_cluster_name="primuslearning-migration"
        if [[ "$eks_check" == "Cluster does not exist" ]]; then
          eksctl create cluster  --name $eks_cluster_name --region us-east-1 --nodegroup-name linux-nodes --node-type t2.micro --nodes 2
        fi

    - name: Update kube config
      run: aws eks update-kubeconfig --name primuslearning-migration

    - name: Deploy to EKS
      uses: swdotcom/update-and-apply-kubernetes-configs@v1
      with:
        k8-config-file-paths: |
          deployment.yaml
          service.yaml
        replacement-method: defined
      env:
        IMAGE_TAG: ${{ github.sha }}
